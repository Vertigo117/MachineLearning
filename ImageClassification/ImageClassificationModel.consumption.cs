// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ImageClassification.Models;

namespace ImageClassification
{
    public partial class ImageClassificationModel
    {

        private static string MLNetModelPath = Path.GetFullPath("ImageClassificationModel.zip");

        public static readonly Lazy<PredictionEngine<Input, Output>> PredictEngine = new Lazy<PredictionEngine<Input, Output>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="Input"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" Output"/></returns>
        public static Output Predict(Input input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<Input, Output> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<Input, Output>(mlModel);
        }
    }
}
